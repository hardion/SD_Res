{"changed":true,"filter":false,"title":"Untitled","tooltip":"/assets/js/Untitled","value":"function userInformationHTML(user) {\n    return `\n        <h2>${user.name}\n            <span class=\"small-name\">\n                (@<a href=\"${user.html_url}\" target=\"_blank\">${user.login}</a>)\n            </span>\n        </h2>\n        <div class=\"gh-content\">\n            <div class=\"gh-avatar\">\n                <a href=\"${user.html_url}\" target=\"_blank\">\n                    <img src=\"${user.avatar_url}\" width=\"80\" height=\"80\" alt=\"${user.login}\" />\n                </a>\n            </div>\n            <p>Followers: ${user.followers} - Following ${user.following} <br> Repos: ${user.public_repos}</p>\n        </div>`;\n}\n\nfunction repoInformationHTML(repos) {\n    if (repos.length == 0) {\n        return `<div class=\"clearfix repo-list\">No repos!</div>`;\n    }\n\n    var listItemsHTML = repos.map(function(repo) {\n        return `<li>\n                    <a href=\"${repo.html_url}\" target=\"_blank\">${repo.name}</a>\n                </li>`;\n    });\n\n    return `<div class=\"clearfix repo-list\">\n                <p>\n                    <strong>Repo List:</strong>\n                </p>\n                <ul>\n                    ${listItemsHTML.join(\"\\n\")}\n                </ul>\n            </div>`;\n}\n\nfunction fetchGitHubInformation(event) {\n    $(\"#gh-user-data\").html(\"\");\n    $(\"#gh-repo-data\").html(\"\");\n\n    var username = $(\"#gh-username\").val();\n    if (!username) {\n        $(\"#gh-user-data\").html(`<h2>Please enter a GitHub username</h2>`);\n        return;\n    }\n\n    $(\"#gh-user-data\").html(\n        `<div id=\"loader\">\n            <img src=\"images/loader.gif\" alt=\"loading...\" />\n        </div>`);\n\n    $.when(\n        $.getJSON(`https://api.github.com/users/${username}`),\n        $.getJSON(`https://api.github.com/users/${username}/repos`)\n    ).then(\n        function(firstResponse, secondResponse) {\n            var userData = firstResponse[0];\n            var repoData = secondResponse[0];\n            $(\"#gh-user-data\").html(userInformationHTML(userData));\n            $(\"#gh-repo-data\").html(repoInformationHTML(repoData));\n        },\n        function(errorResponse) {\n            if (errorResponse.status === 404) {\n                $(\"#gh-user-data\").html(\n                    `<h2>No info found for user ${username}</h2>`);\n            } else if (errorResponse.status === 403) {\n                var resetTime = new Date(errorResponse.getResponseHeader('X-RateLimit-Reset') * 1000);\n                $(\"#gh-user-data\").html(`<h4>Too many requests, please wait until ${resetTime.toLocaleTimeString()}</h4>`);\n            } \n            else {\n                console.log(errorResponse);\n                $(\"#gh-user-data\").html(\n                    `<h2>Error: ${errorResponse.responseJSON.message}</h2>`);\n            }\n        });\n}\n\n$(document).ready(fetchGitHubInformation);","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":79,"column":42},"action":"insert","lines":["function userInformationHTML(user) {","    return `","        <h2>${user.name}","            <span class=\"small-name\">","                (@<a href=\"${user.html_url}\" target=\"_blank\">${user.login}</a>)","            </span>","        </h2>","        <div class=\"gh-content\">","            <div class=\"gh-avatar\">","                <a href=\"${user.html_url}\" target=\"_blank\">","                    <img src=\"${user.avatar_url}\" width=\"80\" height=\"80\" alt=\"${user.login}\" />","                </a>","            </div>","            <p>Followers: ${user.followers} - Following ${user.following} <br> Repos: ${user.public_repos}</p>","        </div>`;","}","","function repoInformationHTML(repos) {","    if (repos.length == 0) {","        return `<div class=\"clearfix repo-list\">No repos!</div>`;","    }","","    var listItemsHTML = repos.map(function(repo) {","        return `<li>","                    <a href=\"${repo.html_url}\" target=\"_blank\">${repo.name}</a>","                </li>`;","    });","","    return `<div class=\"clearfix repo-list\">","                <p>","                    <strong>Repo List:</strong>","                </p>","                <ul>","                    ${listItemsHTML.join(\"\\n\")}","                </ul>","            </div>`;","}","","function fetchGitHubInformation(event) {","    $(\"#gh-user-data\").html(\"\");","    $(\"#gh-repo-data\").html(\"\");","","    var username = $(\"#gh-username\").val();","    if (!username) {","        $(\"#gh-user-data\").html(`<h2>Please enter a GitHub username</h2>`);","        return;","    }","","    $(\"#gh-user-data\").html(","        `<div id=\"loader\">","            <img src=\"images/loader.gif\" alt=\"loading...\" />","        </div>`);","","    $.when(","        $.getJSON(`https://api.github.com/users/${username}`),","        $.getJSON(`https://api.github.com/users/${username}/repos`)","    ).then(","        function(firstResponse, secondResponse) {","            var userData = firstResponse[0];","            var repoData = secondResponse[0];","            $(\"#gh-user-data\").html(userInformationHTML(userData));","            $(\"#gh-repo-data\").html(repoInformationHTML(repoData));","        },","        function(errorResponse) {","            if (errorResponse.status === 404) {","                $(\"#gh-user-data\").html(","                    `<h2>No info found for user ${username}</h2>`);","            } else if (errorResponse.status === 403) {","                var resetTime = new Date(errorResponse.getResponseHeader('X-RateLimit-Reset') * 1000);","                $(\"#gh-user-data\").html(`<h4>Too many requests, please wait until ${resetTime.toLocaleTimeString()}</h4>`);","            } ","            else {","                console.log(errorResponse);","                $(\"#gh-user-data\").html(","                    `<h2>Error: ${errorResponse.responseJSON.message}</h2>`);","            }","        });","}","","$(document).ready(fetchGitHubInformation);"],"id":1}]]},"ace":{"folds":[],"scrolltop":511.5,"scrollleft":0,"selection":{"start":{"row":79,"column":42},"end":{"row":79,"column":42},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":39,"state":"start","mode":"ace/mode/text"}},"timestamp":1580680527338}